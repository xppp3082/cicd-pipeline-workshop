name: Deploy Test

on:
    pull_request:
        types: [closed]
        branches: main

jobs:
    test-job:
        runs-on: ubuntu-latest
        steps:
            - run: echo "This is a test before deploy."
            # 要先 checkout repo 給 runner 測試
            - name: checkout-repository
              uses: actions/checkout@v4
            - name: setup-nodejs
              uses: actions/setup-node@v4
              with:
                node-version: '22'
            - name: install-dependencies
              run: npm install
            - name: run-linter-and-prettier
              run: |
                ./node_modules/.bin/prettier --write .
                ./node_modules/.bin/eslint .
            - name: run-test
              run: |
                ./node_modules/.bin/mocha --reporter spec || exit 1
                ./node_modules/.bin/mocha --reporter mochawesome || exit 1
                ./node_modules/.bin/nyc --reporter=html ./node_modules/.bin/mocha --reporter mochawesome || exit 1
            - name: upload-test-report
              if: always()
              uses: actions/upload-artifact@v4
              with:
                name: test-report
                path: |
                    ./mochawesome-report
                    ./coverage

    deploy-web:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        needs: test-job
        steps:
            # - name: Checkout repository
            #   uses: actions/checkout@v2
            # - run: echo "This job was tirggered by a pull request event"
            # - run: echo "Your sercret is ${{ secrets.MY_FIRST_KEY }}"
            - name: deploy to ec2
              uses: appleboy/ssh-action@v1.0.3
              with:
                host: ${{ secrets.EC2_HOST }}
                username:  ${{secrets.EC2_USERNAME }}
                key: ${{ secrets.MY_FIRST_KEY }}
                port: ${{ secrets.EC2_PORT }}
                script: |
                    echo "Your port is ${{ secrets.EC2_PORT }}"
                    cd /home/ubuntu/cicd-pipeline-workshop
                    git pull
                    pm2 restart src/server.js